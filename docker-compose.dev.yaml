version: '3.8'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '433:433'
    volumes:
      - ./.nginx/conf.d/:/etc/nginx/conf.d
    networks:
      - habsat_network

  email-service:
    depends_on:
      - postgres

  post-service:
    depends_on:
      - mongo
      - aws

  user-service:
    depends_on:
      - postgres

  flight-service:
    depends_on:
      - postgres

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    networks:
      - habsat_network
    volumes:
      - habsat_postgres:/var/lib/postgresql/data
      - ./.postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  mongo:
    image: mongo:5.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - '27017:27017'
    networks:
      - habsat_network
    volumes:
      - habsat_mongo:/data/db

  aws:
    image: localstack/localstack:latest
    container_name: aws
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
      USE_SSL: 0
      SERVICES: 's3'
      EDGE_PORT: 4566
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
    ports:
      - '4563-4599:4563-4599'
    networks:
      - habsat_network
    volumes:
      - habsat_aws:/tmp/localstack
      - ./.aws/docker-entrypoint-initaws.d:/docker-entrypoint-initaws.d

volumes:
  habsat_postgres:
  habsat_mongo:
  habsat_aws:
