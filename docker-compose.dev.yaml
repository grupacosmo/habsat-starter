version: '3.8'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '433:433'
    volumes:
      - ./.nginx/conf.d/:/etc/nginx/conf.d
    networks:
      - habsat_network

  naming-server:
    image: cosmopk/habsat-naming-server:master
    container_name: naming-server
    restart: unless-stopped
    networks:
      - habsat_network

  gateway:
    image: cosmopk/habsat-gateway:master
    container_name: gateway
    restart: unless-stopped
    environment:
      EUREKA_SERVICE_URL: ${EUREKA_SERVICE_URL}
    depends_on:
      - naming-server
    networks:
      - habsat_network

  config-server:
    image: cosmopk/habsat-config-server:master
    container_name: config-server
    restart: unless-stopped
    environment:
      EUREKA_SERVICE_URL: ${EUREKA_SERVICE_URL}
      CONFIG_PATH: '/config'
    depends_on:
      - naming-server
    volumes:
      - ./.configs:/config
    networks:
      - habsat_network

  authorization-server:
    image: cosmopk/habsat-authorization-server:master
    container_name: authorization-server
    restart: unless-stopped
    depends_on:
      - naming-server
      - gateway
    networks:
      - habsat_network

  email-service:
    image: cosmopk/habsat-email-service:master
    container_name: email-service
    restart: unless-stopped
    depends_on:
      - postgres
      - naming-server
      - gateway
    networks:
      - habsat_network

  post-service:
    image: cosmopk/habsat-post-service:master
    container_name: post-service
    restart: unless-stopped
    depends_on:
      - naming-server
      - gateway
      - postgres
      - aws
    networks:
      - habsat_network

  user-service:
    image: cosmopk/habsat-user-service:master
    container_name: user-service
    restart: unless-stopped
    depends_on:
      - postgres
      - naming-server
      - gateway
    networks:
      - habsat_network

  flight-service:
    image: cosmopk/habsat-flight-service:master
    container_name: flight-service
    restart: unless-stopped
    depends_on:
      - postgres
      - naming-server
      - gateway
    networks:
      - habsat_network

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    networks:
      - habsat_network
    volumes:
      - habsat_postgres:/var/lib/postgresql/data
      - ./.postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  mongo:
    image: mongo:5.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - '27017:27017'
    networks:
      - habsat_network
    volumes:
      - habsat_mongo:/data/db

  aws:
    image: localstack/localstack:latest
    container_name: aws
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
      USE_SSL: 0
      SERVICES: 's3'
      EDGE_PORT: 4566
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
    ports:
      - '4563-4599:4563-4599'
    networks:
      - habsat_network
    volumes:
      - habsat_aws:/tmp/localstack
      - ./.aws/docker-entrypoint-initaws.d:/docker-entrypoint-initaws.d

networks:
  habsat_network: null

volumes:
  habsat_postgres: null
  habsat_mongo: null
  habsat_aws: null
